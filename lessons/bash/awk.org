

https://opensource.com/article/19/10/intro-awk
* printing a column, columns
:PROPERTIES:
:header-args:bash:  :var file="./test-data/colours.txt"
:END:

  #+name: awkColPrint
  #+begin_src bash :var col=1
    awk -v col=$col '{print $col;}' $file
  #+end_src

  #+RESULTS: awkColPrint
  | name       |
  | apple      |
  | banana     |
  | strawberry |
  | grape      |
  | apple      |
  | plum       |
  | kiwi       |
  | potato     |
  | pineapple  |

** print all columns

   #+call: awkColPrint(col=3)

   #+RESULTS:

** conditional columns

   #+begin_src bash
     awk '$2=="yellow"{printf "fruit: %s, count:%s\n",$1,$3 }' $file
   #+end_src

   #+RESULTS:
   | fruit: banana    | count:6 |
   | fruit: pineapple | count:5 |

** can I cat?

   #+begin_src bash
     cat $file | awk '$2=="yellow"{printf "fruit: %s, count:%s\n",$1,$3 }'
   #+end_src

   #+RESULTS:
   | fruit: banana    | count:6 |
   | fruit: pineapple | count:5 |

   #+begin_src bash
     awk '$2=="yellow"{printf "fruit: %s, count:%s\n",$1,$3 }' <  $file
   #+end_src

   #+RESULTS:
   | fruit: banana    | count:6 |
   | fruit: pineapple | count:5 |

** meta matching columns
   #+begin_src bash
     awk '$2 ~ /p.+p/ {print $0}' $file
   #+end_src

   #+RESULTS:
   | grape | purple | 10 |
   | plum  | purple |  2 |


** numbers are handled naturally
   #+begin_src bash
     awk '$3>8  {print $1,$2}' $file
   #+end_src

   #+RESULTS:
   | name   | color  |
   | grape  | purple |
   | potato | brown  |
